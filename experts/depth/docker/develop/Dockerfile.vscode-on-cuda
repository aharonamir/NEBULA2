FROM nvidia/cuda:10.2-cudnn8-devel-ubuntu18.04
# Avoid warnings by switching to noninteractive
ENV DEBIAN_FRONTEND=noninteractive

# This Dockerfile adds a non-root user with sudo access. Use the "remoteUser"
# property in devcontainer.json to use it. On Linux, the container user's GID/UIDs
# will be updated to match your local UID/GID (when using the dockerFile property).
# See https://aka.ms/vscode-remote/containers/non-root-user for details.
ARG USERNAME=vscode
ARG USER_UID=1000
ARG USER_GID=$USER_UID

## install anaconda
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH
#ENV CONDA_INSTALL anaconda.sh
ENV CONDA_INSTALL miniconda.sh

# hadolint ignore=DL3008
RUN set -x && \
    apt-get update --fix-missing && \
    apt-get install -y --no-install-recommends \
        bzip2 \
        ca-certificates \
        git \
        libglib2.0-0 \
        libsm6 \
        libxcomposite1 \
        libxcursor1 \
        libxdamage1 \
        libxext6 \
        libxfixes3 \
        libxi6 \
        libxinerama1 \
        libxrandr2 \
        libxrender1 \
        mercurial \
        openssh-client \
        procps \
        subversion \
        wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* && \
    UNAME_M="$(uname -m)" && \
    if [ "${UNAME_M}" = "x86_64" ]; then \
        # ANACONDA_URL="https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-x86_64.sh"; \
        # SHA256SUM="fedf9e340039557f7b5e8a8a86affa9d299f5e9820144bd7b92ae9f7ee08ac60"; \
        ANACONDA_URL="https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"; \
        SHA256SUM="1ea2f885b4dbc3098662845560bc64271eb17085387a70c2ba3f29fff6f8d52f"; \
    elif [ "${UNAME_M}" = "aarch64" ]; then \
        # ANACONDA_URL="https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-aarch64.sh"; \
        # SHA256SUM="4daacb88fbd3a6c14e28cd3b37004ed4c2643e2b187302e927eb81a074e837bc"; \
        ANACONDA_URL="https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh"; \
        SHA256SUM="4879820a10718743f945d88ef142c3a4b30dfc8e448d1ca08e019586374b773f"; \
    fi && \
    wget "${ANACONDA_URL}" -O $CONDA_INSTALL -q && \
    echo "${SHA256SUM} ${CONDA_INSTALL}" > shasum && \
    sha256sum --check --status shasum && \
    /bin/bash $CONDA_INSTALL -b -p /opt/conda && \
    rm $CONDA_INSTALL shasum && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    find /opt/conda/ -follow -type f -name '*.a' -delete && \
    find /opt/conda/ -follow -type f -name '*.js.map' -delete && \
    /opt/conda/bin/conda clean -afy

## VSCODE PART
# Configure apt and install packages
RUN apt-get update \
    && apt-get -y install --no-install-recommends apt-utils dialog 2>&1 \
    #
    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed
    && apt-get -y install git openssh-client less iproute2 procps lsb-release \
    #
    # Install DataScience Python Libraries
    # && pip --disable-pip-version-check --no-cache-dir install pylint \
    # && pip --disable-pip-version-check --no-cache-dir install jupyter \
    # && pip --disable-pip-version-check --no-cache-dir install numpy \
    # && pip --disable-pip-version-check --no-cache-dir install pandas \
    # && pip --disable-pip-version-check --no-cache-dir install scipy \
    # && pip --disable-pip-version-check --no-cache-dir install folium==0.2.1 \
    # && pip --disable-pip-version-check --no-cache-dir install matplotlib \
    # && pip --disable-pip-version-check --no-cache-dir install ipywidgets>=7.0.0 \
    # && pip --disable-pip-version-check --no-cache-dir install bqplot \
    # && pip --disable-pip-version-check --no-cache-dir install nbinteract==0.0.12 \
    #
    # Update Python environment based on requirements.txt
    ## && pip --disable-pip-version-check --no-cache-dir install -r /tmp/pip-tmp/requirements.txt \
    ## && rm -rf /tmp/pip-tmp \
    #
    # Create a non-root user to use if preferred - see https://aka.ms/vscode-remote/containers/non-root-user.
    && groupadd --gid $USER_GID $USERNAME \
    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
    # [Optional] Add sudo support for the non-root user
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME\
    && chmod 0440 /etc/sudoers.d/$USERNAME \
    #
    # Clean up
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*

#change to vscode user
## install nebula part
RUN  apt-get update \
    && apt-get install -y libgl1-mesa-glx \
    && apt-get install -y ffmpeg libsm6 libxext6 \
    && apt-get install -y vim nodejs \
    # Clean up
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*


ENV CONDA_ENV base_nebula
# # Copy environment.yml (if found) to a temp location so we update the environment. Also
# # copy "noop.txt" so the COPY instruction does not fail if no environment.yml exists.
COPY environment.yml* noop.txt /tmp/conda-tmp/
# adding extra channels and creating env
RUN /opt/conda/bin/conda config --append channels conda-forge && /opt/conda/bin/conda config --append channels pytorch && \
    if [ -f "/tmp/conda-tmp/environment.yml" ]; then umask 0002 && /opt/conda/bin/conda env create -n ${CONDA_ENV} -f /tmp/conda-tmp/environment.yml; fi \
    && conda clean --all --yes && rm -rf /tmp/conda-tmp

RUN chown -R $USERNAME:$USERNAME /opt/conda
USER $USERNAME
RUN echo "source /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc
RUN echo "conda activate ${CONDA_ENV}" >> ~/.bashrc
# ## now pip install part
# COPY .devcontainer/requirements.txt .devcontainer/noop.txt /tmp/pips/
# RUN if [ -f "/tmp/pips/requirements.txt" ]; then umask 0002 && /opt/conda/bin/pip install -r /tmp/pips/requirements.txt; fi \
#     && rm -rf //tmp/pips

RUN conda install jupyterlab && conda clean --all --yes

# # [Optional] Uncomment this section to install additional OS packages.
# # RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
# #     && apt-get -y install --no-install-recommends <your-package-list-here>
# Switch back to dialog for any ad-hoc use of apt-get
ENV DEBIAN_FRONTEND=dialog

